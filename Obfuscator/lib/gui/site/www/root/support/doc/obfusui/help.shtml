<!--#set var="title" value="Stunnix products documentation: Stunnix Obfuscator Project Manager" -->
<!--#include virtual="/h.shtml" -->
<div class=body>

<div class=sec>Project dialog</div>
<a name=prjoptions></a>
<a name=prjnew></a>
<dl>
<dt><a name=prj.title>Project title</a>
<dd>Title of the project  - it can contain any characters.

<dt><a name=prj.indir>Input directory name</a>
<dd>Topmost directory that contains all files of your project. Output
directory and directory for state files should not be subdirectories of it.

<dt><a name=prj.indir>Output directory name</a>
<dd>Directory that will contain protected version of your project. All
    subdirectories your project has will automatically be created in it.
    It's possible and very recommended to use directory names relative
    to the <a href=#prj.indir>Input directory name</a> - this way
    you won't have to change much in the project options if you will
    decide to move project to the new directory; it will make 
    hand-editing     of exported buildscripts easier.

<dt><a name=prj.stdir>State files directory</a>
<dd>Directory that will contain various state files for your project - 
    lists of extracted symbols, buildscripts and other types of files.
    Cleaning it will slow down rebuilding process, so don't assign
    the name to the common temporary directory for your operating system
    or user account; that directory shouldn't be shared with other projects,
    or strange behaviour is guaranteed. The content of this directory
    is autogenerated automatically if lost, so feel free to clear it once
    you've finished protecting your applicaiton.

<dt><a name=prj.precmdline>Commandline to run before building project</a>
<dd>A command that is run when you invoke any "Rebuild" action in the Build
    menu, before building the project. This setting is optional. The
    current directory is set to input directory of the project when invoking
    that command.

<dt><a name=prj.postcmdline>Commandline to run after building project</a>
<dd>A command that is run when you invoke any "Rebuild" action in the Build
    menu, after building the project. This setting is optional. The
    current directory is set to input directory of the project when invoking
    that command. It's run before testing command.


<dt><a name=prj.testcmd>Commandline to run for testing</a>
<dd>A command that is run when you invoke Build-&gt;Rebuild changed &amp; Test
    once rebuilding is complete. This setting is optional. Useful for
    starting browser or validator for the protected project. The
    current directory is set to input directory of the project when invoking
    that command.
    
<dt><a name=prj.codetype>Code type (optional)</a>
<dd>Type of majority of code your project contains. Selecting proper type
    increases chances for automatic mode assignment to guess type of
    each file of your project properly (though of course you will be able
    to specify file type manually).

<dt><a name=prj.listofmodes>List of file-processing modes</a>
<dd>Lists all file-processing modes of your project, clicking on th
    title of the mode opens <a href=#mode>options for that mode</a>. 
    You can assign
    only one file-processing mode for each file of your project.
    When project is created, it's filled with standard modes. 
    <!-- Add notes on system modes -->

</dl>

<div class=sec>Open project dialog</div>
<a name=prjopen></a>
<div class=dlgdesc>This dialog lists all projects that were ever created or 
imported on this computer, click on a title of any project to open it.</div>


<div class=sec>Mode settings dialog</div>
<a name=mode></a>
<a name=modes></a>
<dl>
<dt><a name=mode.title>Title</a>
<dd>Title of the mode. Can contain any characters. It's used in drop-down
    lists, so use short titles if possible (20-30 characters).

<dt><a name=mode.parent>Parent mode</a>
<dd>Select name of the mode from which protection settings will be 
    inherrited. If the checkbox before the protection setting is checked,
    the specified value of setting will be user, otherwise it will be
    inherrited from the parent mode.
    
<dt><a name=mode.filer_visible>Visible in filer</a>    
<dd>Specifies whether the mode can be assigned to the file of the project.
    If you wish to have some mode just for inheriting protection settings 
    by child modes from it, uncheck this checkbutton.
    
<dt><a name=mode.descr>Description of the mode</a>    
<dd>Description of the mode, for documentation purposes only.

<dt><a name=mode.resultopts>View resultant settings</a>    
<dd>Shows the effecting protection settings for this mode, which are computed
    by recursively using non-overriden settings from parent modes.

<dt><a name=mode.resultcmdline>View resultant commandline</a>    
<dd>Shows the effecting commandline computed from protection settings
    of this mode and its parents.

<dt><a name=mode.settings>Overriden settings</a>    
<dd>Shows the protection settings for that mode. If setting is not overriden
    (i.e. if checkbox before it is not checked), then the setting with
    same name is checked in the parent mode; if it's not overriden in the
    parent, the parent of the parent is checked; if the setting is overriden,
    its value is used as an effective value for corresponding setting.

<dt><a name=mode.setdefaults>Set settings to defaults</a>    
<dd>Sets values of protection settings to their default values, and saves
    them. This doesn't affect the state of overriding of each setting.

</dl>

<div class=sec>Tools, commandline builder</div>
<a name=tools_cmdbuilder></a>
<div class=dlgdesc>This dialog allows to build commandlines without creating
new project.</div>

<!--#include virtual="/f.shtml" -->