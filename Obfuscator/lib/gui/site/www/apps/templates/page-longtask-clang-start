<%
    use obfui::cmn;
    my ($task_info,$param1,$param2) = @_;
    my($longtask_path,$task) = @$task_info;
%>

<link rel="stylesheet" type="text/css" class="ui" href="/res/other/semantic-ui/2.1.4/semantic.min.css">
<script src="/res/other/semantic-ui/2.1.4/semantic.min.js"></script>

    <h3 class="ui center aligned icon header" style="display: none" id="header_failed">
        <i class="remove circle icon negative"></i><div class="placeholder_failed"></div>
    </h3>

    <h3 class="ui center aligned icon header" style="display: none" id="header_success">
        <i class="checkmark icon positive"></i><div class="placeholder_success"></div>
    </h3>


<script>
<!--
window.longtask_hooks = {
    decorator_for_diagnostics: function(hubelt, element,item,idx) {
		if (idx > 0 )
            	    hubelt.append( element.text(item[0]) );
            },

    decorator_for_error_item: function(hubelt, element,item,idx) {
		if (idx != 0 )
            	    hubelt.append( element.html(item) );
     },



    callback_on_finished : function(task,state) {
	J('.ZZlongtask-status-success, .longtask-div-log-is-here, .longtask-tracelog').hide();
	J('#return-to-home-section').show();
	var failed = state.error_count;
	var failed_suff = failed ? '_failed' : '_success';
	if (failed)
	    J('.x-' + state.error_data[0]).show();

	J('.placeholder' + failed_suff).html( J('.longtask-status' + failed_suff).html() );
	J('.longtask-status' + failed_suff).hide();
	J('#header' + failed_suff).show();

	J('#dimmer').hide();
    }
}
-->
</script>

<% $forge->include('wgt-longtask', $longtask_path,$task ) %>

<div>&nbsp;</div>

  <div id=dimmer class="ui active inverted dimmer">
    <div class="ui text loader"><%= __('Please wait..') %></div>
  </div>


<div class=x-no-compile_commands style="display: none">

    <%= __('Please generate compile_commands.json somehow!') %>
    <p/>
</div>

<div id=return-to-home-section style="display: none">
    <div class="main ui container">
	<div>&nbsp;</div>
	<%$ __('Click <a class=menuref href=syms.gen_from_comp_db>here</a> to return to main Clang-based symbol extraction screen.') %>
    </div>
</div>