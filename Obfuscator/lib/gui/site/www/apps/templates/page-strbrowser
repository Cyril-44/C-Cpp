<% use obfui::cmn;    my ($info,$is_equal_to_ident_tab_visible) = @_; %>

    <link rel="stylesheet" href="/res/themes/base/jquery.ui.all.css">
    <script src="/res/jquery-1.6.2.js"></script>
    <script src="/res/ui/jquery.ui.core.js"></script>
    <script src="/res/ui/jquery.ui.widget.js"></script>

    <script src="/res/ui/jquery.ui.tabs.js"></script>


<% if (!@{$info->{all}}) { %>
<%= __('No strings found or project has not been built yet.') %>
<% } else { %>

<script>
\$(function() {
  \$( "#tabs" ).tabs();
});
</script>

<%$ __('You can cut the list and paste it to this <a href=syms.edituser.main>list of exceptions</a>.') %>

<%$ __('Place your mouse pointer over a string to see files it was encountered in.') %>

<% 

my %comment_by_tab;
$comment_by_tab{ident} = __('This is a list of strings that <b>are equal</b> to some symbol encountered in your code (but that are not in a list of exceptions).');
$comment_by_tab{withident} = __('This is a list of strings that <b>contain</b> some of the symbols, encountered in your code (but that are not in a list of exceptions). E.g. if you use some expression as argument to eval(), you will see it here.');
$comment_by_tab{identlike} = __('This is a list of strings that <b>look like</b> a symbol (e.g. name of function or variable). Strings from first tab are omitted from this list.');
$comment_by_tab{all} = __('This is a list of all strings found in your code.');

my %suggestion_by_tab = (

'ident' =>   __('Most probably you may wish to add those symbols to the list of exceptions in <a class=menuitemref href=syms.edituser.main>Symbols &rArr; Edit user-specified exceptions</a> or to <a class=menuitemref href=syms.edituser.quotednames>Symbols &rArr;  Edit strings that contains symbol names</a>!') ,
'withident' => '<b>' .__('It may not hurt adding those symbols found in strings to the list of exceptions <a class=menuitemref href=syms.edituser.main>Symbols &rArr; Edit user-specified exceptions</a>..') . '</b>',
'identlike' => __(' You should inspect whether these strings need to be added to the list of exceptions.'),
'all' => __('This list is provided just for reference.'),
);

my $tabidx = 0;

%>

<p>
<div id="tabs">
<ul>
    <% if ($is_equal_to_ident_tab_visible) {  %>
	<li><a href="#tabs-<%= ++$tabidx %>"> <%= __('Strings equal to some symbol') %>  </a></li>
    <% } %>
	<li><a href="#tabs-<%= ++$tabidx %>"> <%= __('Strings containing some symbol') %> </a></li>
    <% if ($is_equal_to_ident_tab_visible) { %>
	<li><a href="#tabs-<%= ++$tabidx %>"> <%= __('Strings looking like symbol') %> </a></li>
    <% } %>
	<li><a href="#tabs-<%= ++$tabidx %>"> <%= __('All strings') %> </a></li>
</ul>

<% 
$tabidx = 0;
my @tabset = $is_equal_to_ident_tab_visible ? qw(ident withident identlike all) : qw(withident all);
my $tabid;
for my $k (@tabset) {  #for all 3 tables
    my $setinfo = $info->{$k}; ++$tabidx;
    $tabid = $tabset[$tabidx-1];
%>
<div id="tabs-<%= $tabidx  %>">

<%$ $comment_by_tab{$k}%>
<p>
<%$ $suggestion_by_tab{$k}%>
<p>

<% if (@$setinfo) { %>
<table class=symlist   >
<tbody id=symlist_<%= $tabid %> >
<% 
    my $idx;
    foreach (@$setinfo) {
	++$idx;
	my ($str,$location_info) = @$_;
	
	my $allcnt = 0;
	my @locinfo_parts = map { 
		my $cnt = 0+@{$location_info->{$_}};
		$allcnt += $cnt;
		s,[\\],\\\\,g;
		"$_  ($cnt times)"
	    } sort keys %$location_info;
	my $locinfo_str = join('<br>', @locinfo_parts);
	$str =~ s,\0\d+\0,<SERVERSIDECODE>,g;
%>
<tr class=direntry<%? ($idx %2) %> ><td onmouseover='return overlib("<b>Found <%= $allcnt %> times in:</b><br><%$ $locinfo_str %>")' onmouseout="return nd()"><%= $str %></td>
<%   } %>
</table>

<% if ($tabid eq 'ident' || $tabid eq 'identlike') { %>
<p>
    <% $forge->include('wgt-submitbtn',__('Append to exceptions'),'append_exceptions_' . $tabid,
	__('Append to Symbols &rArr; Edit user-specified exceptions'),'submit',('other_classes'=>'append_to_list', 
			'other_attrs'=> { 'tabid', $tabid, 'listid', 'main' } ))  %>

    <% $forge->include('wgt-submitbtn',__('Append to quoted symbols'),'append_quoted_syms_' . $tabid,
	__('Append to Symbols &rArr; Edit strings that contains symbol names'),'submit',('other_classes'=>'append_to_list', 
			'other_attrs'=> { 'tabid', $tabid, 'listid', 'quotednames' } ))  %>

<% } %>

<% } %>


</div> <!-- tabs-<%= $tabidx %> -->
<% }  %>
</div> <!-- <div id=tabs> -->
<% } %>

<!-- <center><p><% $forge->include('wgt-backbtn',__('Back')) %></center> -->


<script>
J(function() {
    J(".append_to_list").on("click",function() {
	var tabid = J(this).attr('tabid');
	var listid = J(this).attr('listid');

	var txt = J('#symlist_' + tabid).text();

	var now = new Date();
	var formated_date = now.toLocaleDateString();
	txt = "\\n\\n#Appended from Symbols -> 'View strings encountered in code' on " + formated_date  + txt;

        var url_ = 'syms.append.' + listid;
        jQuery.ajax({
           type: "POST",
           url: url_,
           data: { 'havevals':1, 'symbols': txt } ,
           success: function(data)
           {
		//alert("adding " + listid + " into " + tabid + ' ' + txt);
		mygrowl("Done appending symbols");
           }
         });
    });    
} );
</script>