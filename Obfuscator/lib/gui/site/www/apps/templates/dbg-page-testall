<% use obfui::cmn; my ($cfgref) = @_; 
# FAKE_PROJECT/tools.TEST-ALL-PAGES
# use $FAKE_PRJ in code to detect running for fake project

my @links;
push @links, qw(menu.project); #sample of menu

#project menu
push @links, map { "project.$_" } qw(
    dbg.page-main dbg.page-start
    new newmsg open imported-ok import unlistedfiles
    files options modeoptions switchbase.code stop?is_fake=1
    switchbase.code.1
);
push @links, 'project.fnmanglingopts' if $cfgref->{product}->{have_filename_mangling};


#settings menu
push @links, map { "modes.$_" } qw(
    edit._rawcode relatives._rawcode filesusing._rawcode resultcmdline._rawcode
);

push @links, map { "build.$_" } qw(
    rebuild.all clear_all
);

push @links, qw(
    tools.syms_from_dir  tools.axextract tools.cmdbuilder  tools.changeskin tools.patchtrial
    tools.installscripts 

    syms.choose_except_by_header syms.edituser.main syms.edituser.suffix syms.edituser.mapping
    syms.view.mapping  syms.view.autoextracted
);

if ($cfgref->{product}->{have_filename_mangling}) {
    push @links, qw(
	filenames.edit_predicate?THIS_IS_LOW_PRIORITY    
	filenames.view.filenames_map  filenames.view.dirnames_map
    );
};

push @links, qw(
    docs.about 
);

%>
Select page to test.
<ol>
<% foreach my $l (@links) { %>
<li><a target=_blank href=<%= $l %>><%= $l %></a>
<% } %>
</ol>
